J'ai la structure de répertoire suivante :
V:\WORK\EMPTYPROJECT
│   .gitignore
│   .pylintrc
│   pytest.ini
│   README.md
│   requirements.txt
│   requirements_pro.txt
│   setup.py
│
├───data
│   ├───db
│   │       EmptyProj.accdb
│   │       EmptyProj.db
│   │
│   ├───init_data
│   │       Basic_Data.xlsx
│   │
│   ├───input
│   ├───log
│   ├───output
│   ├───references
│   └───templates
├───docs
├───emptyproject
│   │   empty_project.py
│   │   shared.py
│   │   this_db.py
│   │   this_project.py
│   │   __init__.py
│   │
│   ├───config
│   │       logging_config.yaml
│   │       project_config.yaml
│   │
│   ├───db
│   │       base.py
│   │       core_db.py
│   │       crud.py
│   │       db.py
│   │       models.json
│   │       models.py
│   │       sqlalchemy_extensions.py
│   │       __init__.py
│   │
│   ├───lib
│   │       logger.py
│   │       pd_version_dependent_code_example.py
│   │       project.py
│   │       singleton_meta.py
│   │       utils.py
│   │       __init__.py
│   │
│   └───xl
│           xl.py
│           xl_initial_data.py
│           __init__.py
│
├───msaccess_code
│   ├───db
│   ├───dbDefs
│   ├───dbInitData
│   └───docs
├───tests
│   │   conftest.py
│   │   test_shared.py
│   │   test_this_project.py
│   │   __init__.py
│   │
│   ├───config
│   ├───db
│   ├───lib
│   │       test_logger.py
│   │       test_utils.py
│   │
│   └───xl
└───tools
    │   compare_excel_result.py
    │   graph_test.py
    │   graph_test2.py
    │   json_2_classes.py
    │   process.py
    │   remove_trailing_whitespaces.py
    │   tabledefs_2_json.py
    │
    ├───lib
    │       db_class_generator.py
    │       easy_definition.py
    │
    └───powershell
            access_create_and_export.ps1
            CheckAgainstRefs.ps1
            pyclean.ps1
            sqlite_create_and_export.ps1

il s'agit d'un projet nommé EmptyProject qui sera utilisé pour créé de nouveaux projets. donne-moi un script python qui sera pacé dans le sous répertoire tools du projet. 
Fonctionnalités:
il demandera le nom du nouveau projet "newProjectName". Ce paramètre doit être défini, puis le chemin du répertoire dans lequel il doit être créé "ProjectPath". s'il n'est pas défini, il sera mis deux niveau plus haut que le script et son chmein vérifié. S'il n'existe pas il sera redemandé.

Le script crée ensuite le répertoire ProjectPath/newProjectName, puis copie tout ce qui se trouve dans EmptyProject dans ce répertoire.
Il faut compléter le script avec les commandes suivantes:
Dans le répertoire principal en assumant que newproject = lower case  du "newProjectName" choisi
a) supprimmer .git
b) remplacer 'emptyproject' par newproject dans .pylintrc global
c) remplacer 'emptyproject' par newproject dans pytest.ini global
d) remplacer 'EmpyProject' par le newProjectName dans config/config_project.yaml global
e) remplacer la valeur dela colonne EN de la ligne pour laquelle Ref=APP_DATA de la feuille ResourceStrings par le newProjectName dans le fichier data\init_data\Basic_Data.xlsx

f) renommer le répertoire emptyproject avec lower case  du "newProjectName" choisi
g) exécuter la sequence
	git init
	git add .
	git commit -m "Initial commit"
	
h) executer pytest 
	
i) exécuter	pylint